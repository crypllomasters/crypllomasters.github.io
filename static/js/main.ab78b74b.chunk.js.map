{"version":3,"sources":["assets/logo-pi.png","App.js","Utils.js","serviceWorker.js","index.js"],"names":["module","exports","App","n","color","useState","leaving","setLeaving","setSection","renderGoToSection","fullpageApi","title","section","className","href","onClick","e","preventDefault","moveTo","rel","scrollOverflow","sectionsColor","Array","from","keys","map","item","onLeave","origin","destination","direction","index","console","log","afterLoad","navigation","menu","render","state","id","target","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab78b74b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-pi.77e93b0b.png\";","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport ReactFullpage from \"@fullpage/react-fullpage\";\r\nimport \"fullpage.js/vendors/scrolloverflow\"; // Optional. When using scrollOverflow:true\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./arrow.css\";\r\nimport logo from \"./assets/logo-pi.png\";\r\n// import arrow from \"./assets/arrow-down.svg\";\r\nimport \"./index.css\";\r\nimport { genArrayColors } from \"./Utils\";\r\n\r\nconst App = () => {\r\n  const [leaving, setLeaving] = useState(0);\r\n  const [section, setSection] = useState(0);\r\n\r\n  const onLeave = (origin, destination, direction) => {\r\n    setLeaving(origin.index);\r\n    console.log(\"leaving\", origin.index);\r\n  };\r\n\r\n  const afterLoad = (origin, destination, direction) => {\r\n    setSection(destination.index);\r\n    console.log(\"section\", destination.index);\r\n  };\r\n\r\n  const lastSection = () => leaving === 7;\r\n\r\n  const renderScroll = () => (\r\n    <div className=\"mouse_scroll\">\r\n      <div className=\"mouse\">\r\n        <div className=\"wheel\"></div>\r\n      </div>\r\n      <div>\r\n        <span className=\"m_scroll_arrows unu\"></span>\r\n        <span className=\"m_scroll_arrows doi\"></span>\r\n        <span className=\"m_scroll_arrows trei\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderGoToSection = (fullpageApi, title, section) => (\r\n    <div className=\"button-wrapper\">\r\n      <a\r\n        href=\"/\"\r\n        className=\"button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          fullpageApi.moveTo(section);\r\n        }}\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {title}\r\n      </a>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <ReactFullpage\r\n        scrollOverflow={true}\r\n        sectionsColor={genArrayColors(10, \"#8C3590\")}\r\n        onLeave={onLeave}\r\n        afterLoad={afterLoad}\r\n        navigation={true}\r\n        menu={true}\r\n        render={({ state, fullpageApi }) => {\r\n          return (\r\n            <div id=\"fullpage-wrapper\">\r\n              <div className=\"section\">\r\n                <p className=\"home-title\">\r\n                  Fala,\r\n                  <br />\r\n                  Crypto Master!\r\n                  <br /> 🏆✨\r\n                </p>\r\n              </div>\r\n              <div className=\"section\">\r\n                <p className=\"title\">Se você chegou até aqui... 🏃🏻</p>\r\n                <p>é porque você pode estar na busca</p>\r\n                <p>por ganhar algum dinheiro extra 💰</p>\r\n                <p>Estou certo? </p>\r\n                {renderGoToSection(fullpageApi, \"Ir Direto Ao Ponto ⚡\", 8)}\r\n              </div>\r\n              <div className=\"section\">\r\n                <p className=\"title\">Não se preocupe! 🤷🏻‍♂️</p>\r\n                <p>\r\n                  Se não entendeu ainda, te explico.\r\n                  <br />\r\n                  Esta é uma oportunidade única.\r\n                  <br />\r\n                  Mas aproveite agora!! pois\r\n                  <br />\r\n                  ela pode não durar\r\n                  <br />\r\n                  muito tempo... ⌛\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"title\">O que precisa saber... 💡</p>\r\n                <p>Primeiro sobre o mercado</p>\r\n                <p>de criptomoedas... Isso mesmo,</p>\r\n                <p>\r\n                  as <span className=\"featured\">CRIPTOMOEDAS!!! 🥇</span>\r\n                </p>\r\n                <p>Você vai ficar surpreso</p>\r\n                <p>com essa... 🧐</p>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"title\">Talvez você ainda não saiba...</p>\r\n                <p>mas nesse tipo de investimento,</p>\r\n                <p>mas vai por mim, daqui alguns meses</p>\r\n                <p>vai agradecer ao tio Crypllo 🔑 aqui</p>\r\n                <p>por ter te mostrado o caminho</p>\r\n                <p> das pedras!! 🔮</p>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"title\">O Método... ⛏</p>\r\n                <p>esse método funciona por mineração,</p>\r\n                <p>e você precisa ativar a cada 24hs.</p>\r\n                <p>Sem usar bateria do celular,</p>\r\n                <p>a mineração acontece na nuvem 🌩️</p>\r\n                <p>pensa na facilidade!! 💸</p>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"title\">Sem mais enrolação!!</p>\r\n                <p>Vamos então ao que interessa...</p>\r\n                <p>A seguir, os passos para você começar</p>\r\n                <p>a ganhar moedas digitais ainda hoje!!!</p>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"step-title\">Passo 1 (Facebook)</p>\r\n                <p className=\"steps\">\r\n                  {\" \"}\r\n                  1️⃣ Primeiro, você precisa de um celular\r\n                  <br /> e uma conta no Facebook.{\" \"}\r\n                </p>\r\n                <p className=\"steps\">\r\n                  {\" \"}\r\n                  2️⃣ Depois você precisa instalar esse app:\r\n                </p>\r\n                <p className=\"step-link-pi\">\r\n                  <a\r\n                    className=\"app-link\"\r\n                    href=\"https://play.google.com/store/apps/details?id=com.blockchainvault\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <img className=\"pi-logo\" src={logo} alt=\"logo\" /> PI Network\r\n                  </a>\r\n                </p>\r\n\r\n                <p className=\"steps\">\r\n                  3️⃣ Com o app instalado,\r\n                  <br /> entre com o seu Facebook\r\n                </p>\r\n                <p className=\"steps\">\r\n                  4️⃣ Depois, utilize meu código de indicação:\r\n                </p>\r\n                <p className=\"steps\">\r\n                  <span className=\"crypllo-code\">crypllo 🔥</span>\r\n                </p>\r\n                <p className=\"footer\">\r\n                  🆙 Seguindo os passos acima,\r\n                  <br />\r\n                  você já consegue minerar!!! 🔑🏆\r\n                </p>\r\n                {renderGoToSection(fullpageApi, \"Calma... Minerar? 😅\", 3)}\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"step-title\">Passo 2 (SMS)</p>\r\n                <p className=\"steps\">\r\n                  1️⃣ Primeiro, você precisa de um celular que receba SMS\r\n                </p>\r\n                <p className=\"steps\">\r\n                  2️⃣ Depois você precisa instalar esse app:\r\n                </p>\r\n                <p className=\"step-link-pi\">\r\n                  <a\r\n                    className=\"app-link\"\r\n                    href=\"https://play.google.com/store/apps/details?id=com.blockchainvault\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <img className=\"pi-logo\" src={logo} alt=\"logo\" /> PI Network\r\n                  </a>\r\n                </p>\r\n\r\n                <p className=\"steps\">\r\n                  3️⃣ Com o app instalado,\r\n                  <br />\r\n                  informe seu número e crie uma senha{\" \"}\r\n                </p>\r\n                <p className=\"steps-details\">\r\n                  anote a senha 📝\r\n                  <br />\r\n                  para não esquecer 😩\r\n                </p>\r\n                <p className=\"steps\">\r\n                  4️⃣ Depois, utilize o código:{\" \"}\r\n                  <span className=\"crypllo-code\">crypllo 🔥</span>\r\n                </p>\r\n                <p className=\"footer\">\r\n                  🆙 Seguindo os passos acima,\r\n                  <br /> você já pode começar a minerar!!! 🔑🏆\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <p className=\"finish-title\">Dúvidas? 🙄</p>\r\n                <p className=\"finish-words\">Se você ainda tem dúvidas</p>\r\n                <p className=\"finish-words\">ou tem interesse em saber</p>\r\n                <p className=\"finish-words\">como aumentar os seus ganhos</p>\r\n                <p className=\"finish-words-highlights\">\r\n                  incluindo outras cryptos!!! 💰\r\n                </p>\r\n                <p className=\"finish-footer\">\r\n                  Entre no meu canal do Telegram:{\" \"}\r\n                </p>\r\n                <div className=\"button-wrapper\">\r\n                  <a\r\n                    className=\"button\"\r\n                    href=\"https://t.me/CryplloMasters\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    t.me/CryplloMasters 🔑🏆\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n\r\n      {!lastSection() && renderScroll()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const genArrayColors = (n: number, color: string) => {\r\n  const array = Array.from(Array(n).keys());\r\n\r\n  return array.map((item) => color);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}